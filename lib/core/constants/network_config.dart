import 'dart:io';

class NetworkConfig {
  // Base URLs cho c√°c platform kh√°c nhau
  static const String _localhost = 'http://localhost:8080/api';
  static const String _androidEmulator = 'http://10.0.2.2:8080/api';
  static const String _networkIP = 'http://192.168.1.100:8080/api'; // Thay ƒë·ªïi IP n√†y theo m√°y c·ªßa b·∫°n
  
  // L·∫•y base URL ph√π h·ª£p v·ªõi platform
  static String get baseUrl {
    if (Platform.isAndroid) {
      // Android emulator s·ª≠ d·ª•ng 10.0.2.2
      // Android device s·ª≠ d·ª•ng IP th·ª±c c·ªßa m√°y host
      return _androidEmulator;
    } else if (Platform.isIOS) {
      // iOS simulator c√≥ th·ªÉ s·ª≠ d·ª•ng localhost
      return _localhost;
    } else {
      // Web v√† desktop s·ª≠ d·ª•ng localhost
      return _localhost;
    }
  }
  
  // Debug method ƒë·ªÉ test c√°c URLs
  static void printNetworkInfo() {
    print('üåê Network Configuration:');
    print('Platform: ${Platform.operatingSystem}');
    print('Base URL: $baseUrl');
    print('Localhost: $_localhost');
    print('Android Emulator: $_androidEmulator');
    print('Network IP: $_networkIP');
  }
  
  // Test connectivity
  static Future<bool> testConnectivity() async {
    try {
      final client = HttpClient();
      final uri = Uri.parse(baseUrl.replaceAll('/api', ''));
      final request = await client.getUrl(uri);
      final response = await request.close();
      
      print('‚úÖ Network test successful: ${response.statusCode}');
      return response.statusCode == 200;
    } catch (e) {
      print('‚ùå Network test failed: $e');
      return false;
    }
  }
}





